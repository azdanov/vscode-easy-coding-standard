{
  "name": "vscode-easy-coding-standard",
  "displayName": "EasyCodingStandard",
  "description": "Easiest way to start using PHP CS Fixer and PHP_CodeSniffer with 0-knowledge.",
  "version": "0.0.0-development",
  "publisher": "azdanov",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/azdanov/vscode-easy-coding-standard.git"
  },
  "engines": {
    "vscode": "^1.27.0"
  },
  "categories": [
    "Formatters",
    "Linters"
  ],
  "scripts": {
    "build": "npm run compile",
    "compile": "tsc -p ./",
    "cz": "git-cz",
    "clean": "rimraf out",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test:coverage": "jest --coverage",
    "test:integration": "run-s compile vscode:test",
    "test": "jest",
    "vscode:prepublish": "npm run build",
    "vscode:test": "node ./node_modules/vscode/bin/test",
    "watch": "tsc -watch -p ./",
    "semantic-release": "semantic-release"
  },
  "activationEvents": [
    "onLanguage:php"
  ],
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "command": "phpcbf-soderlind",
        "title": "PHP Code Beautifier and Fixer: Fix this file",
        "when": "!inOutput && editorFocus && editorLangId == php"
      }
    ],
    "configuration": {
      "title": "PHP Code Beautifier and Fixer Configuration options",
      "type": "object",
      "properties": {
        "phpcbf.executablePath": {
          "scope": "resource",
          "type": "string",
          "default": "phpcbf",
          "description": "Points to the phpcbf exectuable, eg: win: phpcbf.bat, other: phpcbf"
        },
        "phpcbf.standard": {
          "scope": "resource",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "null, PSR1, PSR2, Symfony, WordPress etc. You can also point to a phpcs.xml rules file, eg: /file/path/phpcs.xml"
        },
        "phpcbf.onsave": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Run PHP Code Beautifier and Fixer on save"
        },
        "phpcbf.documentFormattingProvider": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Register PHP document formatting provider, right mouse-click context menu, show as 'Format Document', after changing this option you should restart your editor."
        },
        "phpcbf.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "This setting controls whether phpcbf formatter is enabled."
        },
        "phpcbf.debug": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Write phpcbf stdout to the console"
        }
      }
    }
  },
  "devDependencies": {
    "@semantic-release/changelog": "^3.0.0",
    "@semantic-release/git": "^7.0.4",
    "@types/jest": "^23.3.2",
    "@types/node": "^10.9.4",
    "commitizen": "^2.10.1",
    "cz-conventional-changelog": "^2.1.0",
    "husky": "^1.0.0-rc.14",
    "jest": "^23.6.0",
    "lint-staged": "^7.2.2",
    "npm-run-all": "^4.1.3",
    "prettier": "^1.14.2",
    "rimraf": "^2.6.2",
    "semantic-release": "^15.9.15",
    "ts-jest": "^23.1.4",
    "tslint": "^5.8.0",
    "tslint-config-airbnb": "^5.11.0",
    "tslint-config-prettier": "^1.15.0",
    "tslint-plugin-prettier": "^1.3.0",
    "typescript": "^3.0.3",
    "vscode": "^1.1.21"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "post-commit": "git update-index --again",
      "pre-push": "npm test"
    }
  },
  "lint-staged": {
    "linters": {
      "*.ts": [
        "prettier --write",
        "tslint",
        "git add"
      ],
      "*.{js,json,md,yml,yaml}": [
        "prettier --write",
        "git add"
      ]
    },
    "ignore": [
      "**/dist/*.min.js"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "release": {
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/git",
      "@semantic-release/github"
    ],
    "prepare": [
      "@semantic-release/changelog",
      "@semantic-release/git"
    ],
    "success": [
      "@semantic-release/github"
    ],
    "npmPublish": false,
    "branch": "master"
  }
}
